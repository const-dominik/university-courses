a)
rozmiar pamięci 512B,
mapowanie bezpośrednie,
rozmiar bloku 16B

Wyliczmy tag/index/offset.
offset = log_2 16 = 4
index = log_2 (512/16) = log_2(32) = 5
tag = reszta

| odn. w tablicy | adres | tag | index | offset | hit/miss  |
|----------------|-------|-----|-------|--------|-----------|
| x[0][0]        | 0     | 00  | 00000 | 0000   | comp miss |
| x[1][0]        | 512   | 01  | 00000 | 0000   | conf miss |
| x[0][1]        | 4     | 00  | 00000 | 0100   | conf miss |
| x[1][1]        | 516   | 01  | 00000 | 0100   | conf miss |
| x[0][2]        | 8     | 00  | 00000 | 1000   | conf miss |

Każdy dostęp powoduje, że zmienia się tag, a indeks pozostaje taki sam. Mamy mapowanie bezpośrednie, więc wartości za każdym razem będa nadpisywane, więc mamy 100% chybień.

b)
rozmiar pamięci 1024B,
mapowanie bezpośrednie,
rozmiar bloku 16B

offset = 4
index = log_2(1024/16) = 6
tag = reszta (0, każdą mozliwa wartosc mozemy zapisac na 10 bitach, max 512 + 127*4 < 1024)

| odn. w tablicy | adres | tag | index  | offset | hit/miss  |
|----------------|-------|-----|--------|--------|-----------|
| x[0][0]        | 0     | 00  | 000000 | 0000   | comp miss |
| x[1][0]        | 512   | 00  | 100000 | 0000   | comp miss |
| x[0][1]        | 4     | 00  | 000000 | 0100   | hit       |
| x[1][1]        | 516   | 00  | 100000 | 0100   | hit       |
| x[0][2]        | 8     | 00  | 000000 | 1000   | hit       |
| x[1][2]        | 520   | 00  | 100000 | 1000   | hit       |
| x[0][3]        | 12    | 00  | 000000 | 1100   | hit       |
| x[1][3]        | 524   | 00  | 100000 | 1100   | hit       |
| x[0][4]        | 16    | 00  | 000001 | 0000   | comp miss |
| x[1][4]        | 528   | 00  | 100001 | 0000   | comp miss |
| x[0][5]        | 20    | 00  | 000001 | 0100   | hit       |
| x[1][5]        | 532   | 00  | 100001 | 0100   | hit       |

2 missy po czym 6 hitów, współczynnik chybień = 25%

c)
rozmiar pamięci 512B
2E,
LRU
rozmiar bloku 16B

offset = 4
index = log_2(512/(16*2)) = 4
indeks = reszta

| odn. w tablicy | adres | tag | index | offset | hit/miss  |
|----------------|-------|-----|-------|--------|-----------|
| x[0][0]        | 0     | 00  | 0000  | 0000   | comp miss |
| x[1][0]        | 512   | 10  | 0000  | 0000   | comp miss |
| x[0][1]        | 4     | 00  | 0000  | 0100   | hit       |
| x[1][1]        | 516   | 10  | 0000  | 0100   | hit       |
| x[0][2]        | 8     | 00  | 0000  | 1000   | hit       |
| x[1][2]        | 520   | 10  | 0000  | 1000   | hit       |
| x[0][3]        | 12    | 00  | 0000  | 1100   | hit       |
| x[1][3]        | 524   | 10  | 0000  | 1100   | hit       |
| x[0][4]        | 16    | 00  | 0001  | 0000   | comp miss |
| x[1][4]        | 528   | 10  | 0001  | 0000   | comp miss |
| x[0][5]        | 20    | 00  | 0001  | 0100   | hit       |
| x[1][5]        | 532   | 10  | 0001  | 0100   | hit       |

Sytuacja identyczna jak w b), więc mamy 25%.

Czy pomoże zwiększenie pamięci? To zależy, np w a) => b) pomogło. Natomiast w c) pomogłoby zwiększenie rozmiaru bloku (ilość offsetów, które jak widzimy w tabelce nam się skończyły, co spowodowało miss).